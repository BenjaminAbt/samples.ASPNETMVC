// TT File to generate RouteNames by XML Definition
// Original by Daniel Kailer 
// Extended and published by Benjamin Abt / www.schwabencode.com - www.benjamin-abt.com
// 
// For further updates please do not edit this file!
// Use the Routes.xml (or same name like this tt-file) do configurate your settings.

<#@ template language="C#" debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Xml" #>
<#@ Assembly Name="System.Xml.Linq" #>
// <!-- CHECK THIS PATH ON ERROR -->
<#@ assembly name="$(SolutionDir)packages\MVCRouteCache.1.0.7\lib\net40\SchwabenCode.Web.Mvc.Routing.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>

// Please do not edit 
using System.Web;
using System.Web.Mvc;
using System.Web.Mvc.Html;
using System.Web.Routing;
using SchwabenCode.Web.Mvc.Routing;

<#
	// Get Namespace (normally abc.def.xyz.Routing - do not change the directory!)
	var currentNamespace = System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("NamespaceHint").ToString();
	var applicationNamespace = currentNamespace.Substring(0, currentNamespace.LastIndexOf('.'));

	var xmlFilename = Path.Combine(Path.GetDirectoryName(this.Host.TemplateFile), Path.GetFileNameWithoutExtension(this.Host.TemplateFile) + ".xml");
		
	var rtg = new SchwabenCode.Web.Mvc.Routing.RouteTemplateGenerator(xmlFilename, applicationNamespace);
	
	this.Write(rtg.GenerateRoutes());
	this.Write(rtg.GenerateAreas());
	this.Write(rtg.GenerateRouteNames());
#>

